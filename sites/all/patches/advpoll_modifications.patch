diff --git a/.DS_Store b/.DS_Store
index 8cc19a9..4e927b4 100644
Binary files a/.DS_Store and b/.DS_Store differ
diff --git a/advpoll.module b/advpoll.module
index b43fee1..e0ec73f 100644
--- a/advpoll.module
+++ b/advpoll.module
@@ -495,6 +495,33 @@ function advpoll_display_results($nid, $data, $page = 0) {
         $show_bar = _advpoll_show_writeins_access();
       }
 
+      // Get the total votes for all write in
+      $count = 1;
+      $where_statement = '';
+      $writein_percentage = '';
+      $writein_total = '';
+      foreach ($data->choices as $choice) {
+        if ($choice['write_in'] == 1) {
+          if ($count == 1) {
+            $where_statement .= 'tag=\''. $choice['choice_id'] . '\'';
+          } else {
+            $where_statement .= ' OR tag=\'' . $choice['choice_id'] . '\'';
+          }
+          $count++;
+        }
+      }
+
+      if (!empty($where_statement)) {
+        $result = db_query('SELECT SUM(value) as count FROM votingapi_cache WHERE (' . $where_statement . ') AND function=\'count\'');
+        foreach ($result as $record) {
+          $writein_percentage = ceil((($record->count)*100)/$results['total']);
+          $writein_total = $record->count;
+        }
+      } else {
+        $writein_total = 0;
+        $writein_percentage = 0;
+      }
+ 
       if ($show_bar) {
         $bars .= theme('advpoll_bar', array(
           'title' => $title,
@@ -505,13 +532,15 @@ function advpoll_display_results($nid, $data, $page = 0) {
         );
       }
     }
-
+ 
     $output .= theme('advpoll_results', array(
       'bars' => $bars,
       'total' => $results['total'],
       'voted' => $votes,
       'nid' => $nid,
       'cancel_form' => $rendered_form,
+      'writein_percentage' => $writein_percentage,
+      'writein_total' => $writein_total,
       )
     );
   }
@@ -842,6 +871,7 @@ function advpoll_cancel_vote_submit($form, &$form_state) {
   global $user;
 
   $nid = $form['#nid'];
+  $node = node_load($nid);
 
   $criteria = array();
   $criteria['entity_id'] = $nid;
@@ -850,10 +880,41 @@ function advpoll_cancel_vote_submit($form, &$form_state) {
   if (!$user->uid) {
     $criteria['vote_source'] = ip_address();
   }
+  $selected_vote = votingapi_select_votes($criteria);
+  
+  //Check if this was a write-in
+  $result = db_select('field_data_advpoll_choice', 'f')
+    ->fields('f')
+    ->condition('advpoll_choice_choice_id', $selected_vote[0]['tag'],'=')
+    ->execute()
+    ->fetch(); 
+  $writein = $result->advpoll_choice_write_in;
+
+  //If this is writein and there are no other votes, delete choice
+  if ($writein == 1) {
+    $result = db_select('votingapi_vote', 'v')
+      ->fields('v')
+      ->condition('tag', $selected_vote[0]['tag'],'=')
+      ->execute()
+      ->fetchAll();
+    if (count($result) == 1) {
+      $del = db_delete('field_data_advpoll_choice')
+        ->condition('advpoll_choice_choice_id', $selected_vote[0]['tag'], '=')
+        ->execute();
+
+      //Remove the deleted option from node as well
+      $new_node_choices = array();
+      foreach ($node->advpoll_choice['und'] as $c) {
+        if($c['choice_id'] !== $selected_vote[0]['tag']) {
+          $new_node_choices[] = $c;
+        }
+      }
+      $node->advpoll_choice['und'] = $new_node_choices;
+      node_save($node);
+    }
+  }
 
-  votingapi_delete_votes(votingapi_select_votes($criteria));
-
-  $node = node_load($nid);
+  votingapi_delete_votes($selected_vote);
 
   if (advpoll_user_eligibility($node)) {
 // print out voting form
@@ -893,17 +954,27 @@ function advpoll_process_writein($nid, $writein, $data) {
   if ($node) {
     $lang = entity_language('node', $node);
     $node_choices = $node->advpoll_choice[$lang];
+
     $writein_choice = array(
       'choice' => $writein,
       'write_in' => 1,
       'choice_id' => $id,
     );
 
-    $node_choices[] = $writein_choice;
-    $node->advpoll_choice[$lang] = $node_choices;
-    node_save($node);
-  }
+    $choice_exists = false;
+    foreach ($node_choices as $c) {
+      if (strtolower($writein === strtolower($c['choice']))){
+        $writein_choice = $c;
+        $choice_exists = true;
+      }
+    }
 
+    if (!$choice_exists) {
+      $node_choices[] = $writein_choice;
+      $node->advpoll_choice[$lang] = $node_choices;
+      node_save($node);
+    }
+  }
   return $writein_choice;
 }
 
diff --git a/includes/advpoll_voteapi.inc b/includes/advpoll_voteapi.inc
index 75d031a..16c34dd 100755
--- a/includes/advpoll_voteapi.inc
+++ b/includes/advpoll_voteapi.inc
@@ -394,7 +394,6 @@ function advpoll_checkbox_selected($choices, $votes) {
  *   The unique ID of the choice selected by the user.
  */
 function advpoll_radio_selected($choices, $vote) {
-
   $selected = array();
   $count = count($choices);
 
@@ -405,8 +404,7 @@ function advpoll_radio_selected($choices, $vote) {
       $selected[] = $choices[$i]['choice_id'];
     }
   }
-
-  return $selected;
+  return array_unique($selected);
 }
 
 /**
