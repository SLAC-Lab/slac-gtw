<?php
/**
 * @file
 * Code for the Calendar feature.
 */

include_once 'v_calendar.features.inc';

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Adds custom Selectize behavior to combine the term filters into one widget.
 * Also adds a "Show Access Notices" checkbox to function as a show/hide toggle.
 */
function v_calendar_form_views_exposed_form_alter(&$form, &$form_state) {
  if (strpos($form['#id'], 'views-exposed-form-calendar-view-') !== FALSE) {
    $form['#attached']['js'] = array(
      drupal_get_path('module', 'v_calendar') . '/js/v_calendar.js' => array(
        'scope' => 'header',
      ),
    );
  }
}

/**
 * Implements hook_views_pre_render().
 *
 * Track the current date as the user moves from calendar display to calendar
 * display.
 *
 * @see calendar_views_pre_render().
 */
function v_calendar_views_pre_render(&$view) {
  global $user;

  $tracking = variable_get('calendar_track_date', 0);
  if (!empty($tracking) && ($tracking == 2 || !empty($user->uid))) {
    foreach ($view->argument as $id => &$argument) {

      // If this is not a default date, i.e. the user browsed to a new calendar
      // period on a display that was already displayed, store the beginning of
      // this view as the current date in the session.
      if (date_views_handler_is_date($argument, 'argument') && empty($argument->is_default)) {
        $today = new DateTime('now');
        $date_range = $argument->date_handler->arg_range($argument->argument);

        // If today is within the current date range, make it the default,
        // otherwise go to the beginning of the new range.
        if ($date_range[0] <= $today && $today <= $date_range[1]) {
          $session_date = $today;
        }
        else {
          $session_date = $date_range[0];
        }

        $_SESSION[$view->name]['default_date'] = $session_date;
      }
    }
  }
}
