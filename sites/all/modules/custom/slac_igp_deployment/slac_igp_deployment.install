<?php

/**
 * @file
 * Update functions for the SLAC Today deployment updates module.
 */

/**
 * Implements hook_install().
 */
function slac_igp_deployment_install() {
  // Revert slac_igp_config for shared field bases.
  _slac_igp_deployment_revert('slac_igp_config');

  // Enable Workbench moderation separately from other modules in order to avoid
  // causing the error:
  //   "EntityMalformedException: Missing bundle property on entity of type
  //   file. in entity_extract_ids()"
  // when node_access_rebuild is run.
  module_enable(array(
    'workbench_moderation',
  ));
  variable_set('workbench_moderation_per_node_type', 1);

  // Rebuild permissions after workbench install.
  node_access_rebuild();

  // Enable new modules/features.
  module_enable(array(
    'conditional_fields',
    'flag',
    'jquery_update',
    'pathauto',
    'select_or_other',
    'scheduler',
    'metatag',
    'token',
    'fe_nodequeue',
    'file_entity',
    'media',
    'media_vimeo',
    'media_youtube',
    'linkit',
    'menu_trail_by_path',
    'prepopulate',
    'slac_ip_core',
    'slac_ip_media',
    'slac_ip_config_search',
    'slac_ip_menus',
    'slac_ip_media',
    'slac_ip_panes',
    'slac_search',
    'ct_access_information',
    'ct_basic_page',
    'ct_event',
    'ct_flea_market_item',
    'ct_news',
    'ct_webform',
    'pm_access_notices',
    'pm_flea_market',
    'pm_news',
    'v_access_notices',
    'v_event',
    'v_events_by_term',
    'v_featured_news_pane',
    'v_flea_market',
    'v_news',
    'v_news_archive',
    'v_search',
    't_slac_ip_tags',
    'workbench',
    'workbench_email',
    'slac_ip_config_moderation',
    'date_popup_authored',
    't_event_type',
    'v_terms_on_node',
    'v_top_links',
    'migrate',
    'migrate_ui',
    'migrate_extras',
    'slac_migrate',
  ));

  // Revert slac_ip_menus so that the new menu block will have a DB record.
  _slac_igp_deployment_revert('slac_ip_menus');
  _slac_igp_deployment_remove_legacy_menu_items();
  drupal_flush_all_caches();

  // Update blocks placement.
  _slac_igp_deployment_place_search_block();
  _slac_igp_deployment_place_top_menu_block();
  _slac_igp_deployment_place_main_menu_block();

  // Revert features for pre-existing node types.
  _slac_igp_deployment_revert('ct_access_information');
  _slac_igp_deployment_revert('ct_basic_page');
  _slac_igp_deployment_revert('ct_event');
  _slac_igp_deployment_revert('ct_flea_market_item');
  _slac_igp_deployment_revert('ct_webform');

  // Revert features for pre-existing views.
  _slac_igp_deployment_revert('v_event');
  _slac_igp_deployment_revert('v_flea_market');
  _slac_igp_deployment_revert('v_news');
  _slac_igp_deployment_revert('v_top_links');

  // Revert other pre-existing, updated features.
  _slac_igp_deployment_revert('slac_igp_feed');

  // Disable search module.
  module_disable(array('search'));
}

/**
 * Reverts a feature.
 *
 * @param string $feature_name
 *   The machine name of the feature to revert.
 */
function _slac_igp_deployment_revert($feature_name) {
  $feature = features_get_features($feature_name);
  features_revert(array($feature_name => $feature->components));
}

/**
 * Updates block placement for search blocks.
 */
function _slac_igp_deployment_place_search_block() {
  drupal_flush_all_caches();

  // Remove existing search boxes from the header region.
  db_update('block')
    ->fields(array(
      'status' => 0,
      'region' => '-1',
    ))
    ->condition('module', 'boxes', '=')
    ->condition('delta', array('search_people', 'web_search'), 'IN')
    ->condition('theme', 'slac', '=')
    ->execute();

  // Place the slac search block into the header region.
  db_update('block')
    ->fields(array(
      'status' => 1,
      'weight' => -38,
      'region' => 'header',
    ))
    ->condition('module', 'slac_search', '=')
    ->condition('delta', 'form', '=')
    ->condition('theme', 'slac', '=')
    ->execute();
}

/**
 * Enable the ct_news feature.
 */
function slac_igp_deployment_update_7001() {
  $result = module_enable(array(
    'ct_news',
  ));
  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling the
     ct_news module. It might need to be enabled manually.');
  }
  else {
    return t('The ct_news module was successfully enabled.');
  }
}

/**
 * Enable the slac_ip_config_search feature.
 */
function slac_igp_deployment_update_7002() {
  $result = module_enable(array(
    'slac_ip_config_search',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling slac_ip_config_search.');
  }

  $feature = features_get_features('slac_ip_config_search');
  features_revert(array('slac_ip_config_search' => $feature->components));
}

/**
 * Enable the slac_ip_menus feature and place the new menu block.
 */
function slac_igp_deployment_update_7003() {
  $result = module_enable(array(
    'slac_ip_menus',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling slac_ip_menus.');
  }

  $feature = features_get_features('slac_ip_menus');
  features_revert(array('slac_ip_menus' => $feature->components));

  _slac_igp_deployment_place_top_menu_block();
}

/**
 * Removes legacy menu items from the Main menu.
 */
function _slac_igp_deployment_remove_legacy_menu_items() {
  menu_link_delete(498);
  menu_link_delete(499);
  menu_link_delete(500);
}

/**
 * Places the Top Menu block into the Header region.
 */
function _slac_igp_deployment_place_top_menu_block() {
  db_update('block')
    ->fields(array(
      'status' => 1,
      'weight' => -32,
      'region' => 'header',
    ))
    ->condition('module', 'menu', '=')
    ->condition('delta', 'menu-top-menu', '=')
    ->condition('theme', 'slac', '=')
    ->execute();
}

/**
 * Places the Main menu block into the Navigation bar region.
 */
function _slac_igp_deployment_place_main_menu_block() {
  db_update('block')
    ->fields(array(
      'status' => 1,
      'weight' => 0,
      'region' => 'navigation',
      'title' => '<none>',
    ))
    ->condition('module', 'system', '=')
    ->condition('delta', 'main-menu', '=')
    ->condition('theme', 'slac', '=')
    ->execute();
}

/**
 * Enable the modules for news and media.
 * Rebuild permissions after workbench install.
 */
function slac_igp_deployment_update_7004() {
  $result = module_enable(array(
    'pathauto',
    'scheduler',
    'metatag',
    'token',
    'file_entity',
    'media',
    'media_vimeo',
    'media_youtube',
    'linkit',
    'slac_ip_media',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling modules.');
  }

  // Rebuild permissions after workbench install.
  node_access_rebuild();
}

/**
 * Enable the ct_event feature and revert the slac_igp_config feature which
 * previously contained the Event config.
 */
function slac_igp_deployment_update_7005() {
  $result = module_enable(array(
    'ct_event',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling modules.');
  }

  $feature = features_get_features('slac_igp_config');
  features_revert(array('slac_igp_config' => $feature->components));
}

/**
 * Enable the jquery_update module.
 */
function slac_igp_deployment_update_7006() {
  $result = module_enable(array(
      'jquery_update',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling modules.');
  }
}

/**
 * Enable the conditional_fields module.
 */
function slac_igp_deployment_update_7007() {
  $result = module_enable(array(
    'conditional_fields',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling modules.');
  }
}

/**
 * Enable the slac_ip_core module.
 */
function slac_igp_deployment_update_7008() {
  $result = module_enable(array(
    'slac_ip_core',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling modules.');
  }
}

/**
 * Enable the slac_ip_panes module.
 */
function slac_igp_deployment_update_7009() {
  $result = module_enable(array(
    'slac_ip_panes',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling modules.');
  }
}

/**
 * Enable the ct_access_information feature.
 */
function slac_igp_deployment_update_7010() {
  $result = module_enable(array(
    'ct_access_information',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling modules.');
  }
}

/**
 * Enable the v_featured_news_pane feature.
 */
function slac_igp_deployment_update_7011() {
  $result = module_enable(array(
    'v_featured_news_pane',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling modules.');
  }
}

/**
 * Enable the prepopulate module.
 */
function slac_igp_deployment_update_7012() {
  $result = module_enable(array(
    'prepopulate',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling modules.');
  }
}

/**
 * Enable the menu_trail_by_path module and pm_news feature.
 */
function slac_igp_deployment_update_7013() {
  $result = module_enable(array(
    'menu_trail_by_path',
    'pm_news',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling modules.');
  }
}

/**
 * Enable the v_event feature.
 */
function slac_igp_deployment_update_7014() {
  $result = module_enable(array(
    'v_event',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling modules.');
  }
}

/**
 * Enable the fe_nodequeue module and v_news feature.
 */
function slac_igp_deployment_update_7015() {
  $result = module_enable(array(
    'fe_nodequeue',
    'v_news',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling modules.');
  }
}

/**
 * Enable the fieldset_tags module.
 */
function slac_igp_deployment_update_7016() {
  $result = module_enable(array(
    'fieldset_tags',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling modules.');
  }
}

/**
 * Remove news link from the Main menu.
 */
function slac_igp_deployment_update_7017() {
  $mlid = 1404;
  $menu_link = menu_link_load($mlid);
  if ($menu_link) {
    if ($menu_link['link_title'] == 'News') {
      menu_link_delete($mlid);
      drupal_set_message("The extra News link was deleted");
    }
  }
  else {
    drupal_set_message("The extra News link does not exist so no action is required");
  }
}

/**
 * Enable the t_slac_ip_tags feature.
 */
function slac_igp_deployment_update_7018() {
  $result = module_enable(array(
    't_slac_ip_tags',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling modules.');
  }
}

/**
 * Rename SLAC PUBLIC SITE menu link
 */
function slac_igp_deployment_update_7019() {
  $mlid = 1400;
  $menu_link = menu_link_load($mlid);
  if ($menu_link) {
    if ($menu_link['link_title'] == 'SLAC Public Site') {
      menu_link_delete($mlid);
      drupal_set_message("The SLAC Public Site link has been removed and replaced.");
    }
  }
  else {
    drupal_set_message("The SLAC Public Site link does not exist so no action is required");
  }
}

/**
 * Enable the t_event_type & v_terms_on_node features.
 */
function slac_igp_deployment_update_7020() {
  $result = module_enable(array(
    't_event_type',
    'v_terms_on_node',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling modules.');
  }
}

/**
 * Enable the slac_ip_config_moderation feature.
 */
function slac_igp_deployment_update_7021() {
  $result = module_enable(array(
    'workbench',
    'workbench_email',
    'slac_ip_config_moderation',
    'date_popup_authored',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling modules.');
  }
}

/**
 * Rename remove old map links.
 */
function slac_igp_deployment_update_7022() {
  $links = array(
    array(
      'mlid' => 1403,
      'title' => 'SLAC Campus Map',
      'path' => '<front',
    ),
    array(
      'mlid' => 1402,
      'title' => 'SLAC Meeting Rooms Map',
      'path' => '<front>',
    ),
    array(
      'mlid' => 1399,
      'title' => 'Stanford University Campus Map',
      'path' => '<front>',
    ),
  );
  foreach ($links as $key => $link) {
    $menu_link = menu_link_load($link['mlid']);
    if ($menu_link) {
      if ($menu_link['link_title'] == $link['title']) {
        menu_link_delete($menu_link['mlid']);
        drupal_set_message("A link has been removed.");
      }
    }
  }
}

/**
 * Enable the v_top_links feature.
 */
function slac_igp_deployment_update_7023() {
  $result = module_enable(array(
    'v_top_links',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling modules.');
  }
}

/**
 * Remove the incorrect Maps and Directions menu items replaced by the feature.
 */
function slac_igp_deployment_update_7024() {
  menu_link_delete(1334);
  menu_link_delete(1337);
}

/**
 * Enable migrate modules.
 */
function slac_igp_deployment_update_7025() {
  $result = module_enable(array(
    'migrate',
    'migrate_ui',
    'migrate_extras',
    'slac_migrate',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling modules.');
  }
}

/**
 * Enable v_news_archive feature.
 */
function slac_igp_deployment_update_7026() {
  $result = module_enable(array(
    'v_news_archive',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling modules.');
  }
}

/**
 * Enable basic page webform features and search api modules.
 */
function slac_igp_deployment_update_7027() {

  // Remove core search block.
  db_update('block')
    ->fields(array(
      'status' => 0,
      'weight' => 0,
      'region' => -1,
    ))
    ->condition('module', 'search', '=')
    ->condition('delta', 'form', '=')
    ->condition('theme', 'slac', '=')
    ->execute();

  // Disable search module.
  module_disable(array('search'));

  $result = module_enable(array(
    'search_api',
    'search_api_db',
    'search_api_views',
    'ct_basic_page',
    'ct_webform',
    'v_search',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling modules.');
  }

  drupal_flush_all_caches();

  // Place the slac search block into the header region.
  db_update('block')
    ->fields(array(
      'status' => 1,
      'weight' => -38,
      'region' => 'header',
    ))
    ->condition('module', 'slac_search', '=')
    ->condition('delta', 'form', '=')
    ->condition('theme', 'slac', '=')
    ->execute();
}

/**
 * Enable the select_or_other module and ct_flea_market_item feature.
 */
function slac_igp_deployment_update_7028() {
  $result = module_enable(array(
    'select_or_other',
    'ct_flea_market_item',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling modules.');
  }
}

/**
 * Turn on Workbench Moderation per node type.
 */
function slac_igp_deployment_update_7029() {
  variable_set('workbench_moderation_per_node_type', 1);
}

/**
 * Place the Main menu block into the Navigation bar region.
 */
function slac_igp_deployment_update_7030() {
  _slac_igp_deployment_place_main_menu_block();
}

/**
 * Enable the flag module.
 */
function slac_igp_deployment_update_7031() {
  $result = module_enable(array(
    'flag',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling modules.');
  }
}

/**
 * Enable the pm_flea_market, v_flea_market features.
 */
function slac_igp_deployment_update_7032() {
  $result = module_enable(array(
    'pm_flea_market',
    'v_flea_market',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling modules.');
  }
}

/**
 * Enable the better_exposed_filters module.
 */
function slac_igp_deployment_update_7033() {
  $result = module_enable(array(
    'better_exposed_filters',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling modules.');
  }
}

/**
 * Enable the smart trim module.
 */
function slac_igp_deployment_update_7034() {
  $result = module_enable(array(
    'smart_trim',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling modules.');
  }
}

/**
 * Enable the v_events_by_term feature.
 */
function slac_igp_deployment_update_7035() {
  $result = module_enable(array(
    'v_events_by_term',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling modules.');
  }
}

/**
 * Enable the reroute_email module.
 */
function slac_igp_deployment_update_7036() {
  $result = module_enable(array(
    'reroute_email',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling modules.');
  }

  variable_set('reroute_email_address', "");
  variable_set('reroute_email_enable_message', 1);
  variable_set('reroute_email_enable', 1);
}

/**
 * Enable new features for Access Notices.
 */
function slac_igp_deployment_update_7037() {
  $result = module_enable(array(
    'pm_access_notices',
    'v_access_notices',
  ));

  if ($result == FALSE) {
    throw new DrupalUpdateException('An error occurred while enabling modules.');
  }
}
