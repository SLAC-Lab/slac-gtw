<?php
/**
 * @file
 * Code for the SLAC IGP Custom module.
 */
define('FEATURED_NEWS_DISPLAY', 'field_news_image_display');

/**
 * Implements hook_theme
 */
function slac_igp_custom_theme() {
  return array(

    'slac_igp_node_teaser' => array(
      'render element' => 'elements',
      'preprocess functions' => array(
        'template_preprocess',
        'template_preprocess_node',
      ),
      'template' => 'slac_igp_node_teaser',
    ),
    'slac_igp_node_link' => array(
      'render element' => 'elements',
      'preprocess functions' => array(
        'template_preprocess',
        'template_preprocess_node',
      ),
      'template' => 'slac_igp_node_link',
    ),
  );  
}

/**
 * Implements hook_node_view_alter
 */
function slac_igp_custom_node_view_alter(&$build) {
  $content_types = array('news', 'event', 'access_information');
  if (in_array($build['#bundle'], $content_types)) {
    if ($build['#view_mode'] == 'teaser') {
      $build['#theme'] = 'slac_igp_node_teaser';
      unset($build['links']);
      unset($build['#contextual_links']);
    } 
    
    if ($build['#view_mode'] == 'link')
      $build['#theme'] = 'slac_igp_node_link';
      unset($build['links']);
      unset($build['#contextual_links']);    
  }
}
 

/**
 * Implements hook_help
 */
function slac_igp_custom_help($path,$arg){
    switch($path){
		case "admin/help#image_effect":
			 return '<p>'.t('add image effect to image module.').'</p>';
			 break;
	}
}

/**
 * Implements hook_image_effect_info
 * Create a custom image effect that adds white space to the side of image
 */
function slac_igp_custom_image_effect_info(){
  $effects=array();
  $effects['advance_resize']=array(
	'label'=>t('Advance Resize'),
	'help'=>t('Resize image with white background.'),
	'effect callback'=>'slac_igp_custom_advance_resize_effect',
	'dimensions callback' => 'image_resize_dimensions',
	'form callback' => 'image_resize_form',
	'summary theme' => 'image_resize_summary',
  );
  return $effects;
}

/**
 * Resize function callback
 */
function slac_igp_custom_advance_resize_effect(&$image,$data){
  if (!slac_igp_custom_image_advance_resize($image, $data['width'], $data['height'])) {
    watchdog('image', 'Image resize failed using the %toolkit toolkit on %path (%mimetype, %dimensions)', array('%toolkit' => $image->toolkit, '%path' => $image->source, '%mimetype' => $image->info['mime_type'], '%dimensions' => $image->info['width'] . 'x' . $image->info['height']), WATCHDOG_ERROR);
    return FALSE;
  }
  return TRUE;

}

/**
 * Performing image resize
 */
function slac_igp_custom_image_advance_resize(stdClass $image, $width, $height) {
  $w=$width;
  $h=$height;
  $src_x=0;
  $src_y=0;
  $src_w=$image->info['width'];
  $src_h=$image->info['height'];
  $src_image = $image->resource;
  $dst_w=$src_w;
  $dst_h=$src_h;
  $dst_x=0;
  $dst_y=0;
  if($w>$src_w)
	  $dst_x=($w-$src_w)/2;
  if($h>$src_h)
	  $dst_y=($h-$src_h)/2;
  $dst_image = imagecreatetruecolor($w,$h);
  $backgroundColor = imagecolorallocate($dst_image, 255, 255, 255);
  imagefill($dst_image, 0, 0, $backgroundColor);
  imagecopyresampled($dst_image, $src_image, $dst_x, $dst_y, $src_x, $src_y, $dst_w, $dst_h, $src_w, $src_h);
  imagedestroy($src_image);
  $image->resource = $dst_image;
  $image->info['width'] = $w;
  $image->info['height'] = $h;
  return TRUE;
}


/**
 * Implements hook_field_formatter_info().
 * Creating a custom image formatter that allow user to select alternative image styles
 */
function slac_igp_custom_field_formatter_info() {
  return array(
    'image_igp' => array(
      'label' => t('IGP custom'),
      'field types' => array('image'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function slac_igp_custom_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  switch ($display['type']) {
    case 'image_igp':
    $render = '';
    if (property_exists($entity, FEATURED_NEWS_DISPLAY)) {
    	if (!empty($entity->{FEATURED_NEWS_DISPLAY})) {
    		// getting the image style selected from this content
    		$image_style = $entity->{FEATURED_NEWS_DISPLAY}[LANGUAGE_NONE][0]['value'];
    		$load = image_style_load($image_style);
    		if (!empty($load)) {
    			$render = $image_style;	
    		}	
    	}
    }
    foreach ($items as $delta => $item) {
   		if ($render == '') {
				$element[$delta] = array(
					'#theme' => 'image',
					'#path' => $item['uri'],
				);   			
   		} 
   		else {
				$element[$delta] = array(
					'#theme' => 'image_style',
					'#style_name' => $render,
					'#path' => $item['uri'],
				);   			
   		}
    }
    break;
  }
  return $element;
}
